*&------------------------------------------------------------------------*
*& Report  Z382829_INVIOCE_REPORT   ( Using CL_SALV_TABLE Factory Method )*
*&                                                                        *
*& This type of report gives us information regarding payment method,     *
*& billing date(index), posting period, time, customer purchase order     *
*& number,  VAT registration number .                                     *
*&------------------------------------------------------------------------*
*& Name              Date                       Description               *
*& Manish            05/06/2017                 Invoice Report            *
*&------------------------------------------------------------------------*

REPORT z382829_invioce_report.

TABLES : vbrk.

** Selection Screen
SELECTION-SCREEN BEGIN OF BLOCK a1 WITH FRAME TITLE text-001.

SELECT-OPTIONS : s_vbeln FOR vbrk-vbeln.

SELECTION-SCREEN END OF BLOCK a1 .

*----------------------------------------------------------------------*
*       CLASS lcl_main DEFINITION                                      *
*----------------------------------------------------------------------*
*                                                                      *
*----------------------------------------------------------------------*
CLASS lcl_main DEFINITION FINAL.

** Global Data Declaration
  PUBLIC SECTION.
    CLASS-METHODS: start.
    METHODS : get_data,
              act_sett,
              display.
    TYPES : BEGIN OF sty_main,

      vbeln    TYPE vbrk-vbeln,        " Billing Document
      posnr    TYPE vbrp-posnr,        " Billing item
      matnr    TYPE vbrp-matnr,        " Material Number
      arktx    TYPE vbrp-arktx,        " Short text for sales order item
      fkdat    TYPE vbrk-fkdat,        " billing date
      poper    TYPE vbrk-poper,        " Posting period
      zlsch    TYPE vbrk-zlsch,        " Payment Method
      stceg    TYPE vbrk-stceg,        " VAT Registration Number
      bstnk_vf TYPE vbrk-bstnk_vf,     " Customer purchase order number
      erzet    TYPE vbrk-erzet,        " Entry time

  END OF sty_main.

    CLASS-DATA : lr_main TYPE REF TO lcl_main.
    DATA gt_main TYPE STANDARD TABLE OF sty_main.
    DATA : lr_table       TYPE REF TO cl_salv_table.

ENDCLASS.                    "lcl_main DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_main IMPLEMENTATION                                  *
*----------------------------------------------------------------------*
*                                                                      *
*----------------------------------------------------------------------*
CLASS lcl_main IMPLEMENTATION.

  METHOD start.
** Initilize Object and call methods
    CREATE OBJECT lr_main.
    lr_main->get_data( ).
    lr_main->display( ).

  ENDMETHOD.                    "start

  METHOD get_data.

** Get required  data from database
    SELECT  v1~vbeln
            v2~posnr
            v2~matnr
            v2~arktx
            v1~fkdat
            v1~poper
            v1~zlsch
            v1~stceg
            v1~bstnk_vf
            v1~erzet

            FROM vbrk AS v1 INNER JOIN vbrp AS v2 ON v1~vbeln EQ v2~vbeln INTO TABLE me->gt_main WHERE v1~vbeln IN s_vbeln.
    IF sy-subrc EQ 0.

      SORT gt_main BY  vbeln.

    ENDIF.

  ENDMETHOD.                    "get_data

  METHOD display.

    DATA lv_message   TYPE REF TO cx_salv_msg.

    TRY .

** Call factory method for ALV display
        cl_salv_table=>factory(

         IMPORTING
           r_salv_table   = lr_table    " Basis Class Simple ALV Tables
         CHANGING
           t_table        = me->gt_main ).

      CATCH cx_salv_msg INTO lv_message.    " ALV: General Error Class with Message

    ENDTRY.
    lr_main->act_sett( ).
    lr_table->display( ).

  ENDMETHOD.                    "display

  METHOD act_sett.

** Setting activation data declaration
    DATA columns          TYPE REF TO cl_salv_columns_table.
    DATA layout_settings  TYPE REF TO cl_salv_layout.
    DATA layout_key       TYPE        salv_s_layout_key.
    DATA functions        TYPE REF TO cl_salv_functions_list.
    DATA display_settings TYPE REF TO cl_salv_display_settings.
    DATA: lr_selections   TYPE REF TO cl_salv_selections.

** This will bring you the selectable buttons on the left side of the ALV
    lr_selections = lr_table->get_selections( ).

    lr_selections->set_selection_mode( if_salv_c_selection_mode=>row_column ).

    columns = lr_table->get_columns( ).
    layout_settings = lr_table->get_layout( ).

** ENABLE LAYOUT SETTINGS
    layout_key-report = sy-repid.
    layout_settings->set_key( layout_key ).

    layout_settings->set_save_restriction( if_salv_c_layout=>restrict_none ).
** OPTIMIZE COLUMN WIDTH
    columns->set_optimize( ).
** set toolbar
    functions = lr_table->get_functions( ).
    functions->set_all( ).
** set display settings
    display_settings = lr_table->get_display_settings( ).
    display_settings->set_striped_pattern( if_salv_c_bool_sap=>true ).

  ENDMETHOD.                    "ACT_SETT

ENDCLASS.                    "lcl_main IMPLEMENTATION

START-OF-SELECTION.

  lcl_main=>start( ). " Start the show
